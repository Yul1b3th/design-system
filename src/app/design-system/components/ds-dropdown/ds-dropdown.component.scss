@use "sass:map";
@use "sass:color";
@use "../../styles/abstracts/variables" as *;
@use "../../styles/abstracts/functions" as *;
@use "../../styles/abstracts/mixins" as *;

.dropdown {
  position: relative;
  display: inline-block;

  .dropdown-toggle {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    padding: get-spacing(sm) get-spacing(md);
    font-size: get-font-size(base);
    font-weight: 600;
    text-align: center;
    text-decoration: none;
    border-radius: 4px;
    cursor: pointer;
    @include apply-color(background-color, primary, default);
    @include apply-color(color, utility, white);
    @include apply-transition(all, 0.3s, ease-in-out);

    svg {
      margin-left: get-spacing(sm);
      width: 1em;
      height: 1em;
    }

    &:hover {
      @include apply-color(background-color, primary, dark);
    }

    &:disabled {
      cursor: not-allowed;
      @include apply-color(background-color, neutral, gray);
      @include apply-color(color, neutral, light);
    }
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1000;
    display: block;
    float: left;
    min-width: 10rem;
    padding: get-spacing(sm) 0;
    margin: get-spacing(sm) 0 0;
    font-size: get-font-size(base);
    color: get-color(neutral, dark);
    text-align: left;
    list-style: none;
    background-color: get-background-color(default);
    border: 1px solid get-color(neutral, gray);
    border-radius: 0.25rem;
    @include apply-box-shadow(0, 0.5rem, 1rem, rgba(0, 0, 0, 0.15));

    li {
      padding: get-spacing(sm) get-spacing(md);
      cursor: pointer;

      &:hover {
        background-color: get-color(neutral, light);
      }

      &.selected {
        font-weight: 700;
      }
    }
  }

  &.dark-mode {
    .dropdown-toggle {
      @include apply-color(background-color, neutral, dark-200);
      @include apply-color(color, utility, white);
    }

    .dropdown-menu {
      background-color: get-background-color(inverted);
      @include apply-color(color, utility, white);

      li {
        &:hover {
          background-color: get-color(neutral, dark-100);
        }
      }
    }
  }

  &.light-mode {
    .dropdown-toggle {
      @include apply-color(background-color, primary, default);
      @include apply-color(color, utility, white);
    }

    .dropdown-menu {
      background-color: get-background-color(default);
      @include apply-color(color, neutral, dark);

      li {
        &:hover {
          background-color: get-color(neutral, light);
        }
      }
    }
  }
}
