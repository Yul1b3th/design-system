// abstracts/_mixins.scss

@use "sass:list";
@use "sass:map";
@use "sass:color";
@use "./variables" as *;
@use "./functions" as *;

// === Mixins relacionados con tipografía ===

// Establece la familia tipográfica
@mixin apply-font-family($font: primary) {
  font-family: get-font($font);
}

// Aplica propiedades tipográficas: tamaño, altura de línea, peso, margen inferior, y color
@mixin apply-typography(
  $font-size,
  $line-height: medium,
  $font-weight: normal,
  $margin-bottom: null,
  $text-color: null
) {
  font-size: get-font-size($font-size);
  line-height: get-line-height($line-height);
  font-weight: $font-weight;

  @if $margin-bottom != null {
    margin-bottom: get-spacing($margin-bottom);
  }
  @if $text-color != null {
    color: get-color($text-color);
  }
}

// === Mixins relacionados con espaciado ===

// Aplica márgenes o rellenos
@mixin apply-spacing($property, $size) {
  #{$property}: get-spacing($size);
}

// Aplica márgenes y rellenos de forma abreviada
@mixin apply-spacing-shorthand($type, $size) {
  #{$type}-top: get-spacing($size);
  #{$type}-right: get-spacing($size);
  #{$type}-bottom: get-spacing($size);
  #{$type}-left: get-spacing($size);
}

// === Mixins relacionados con colores ===

// Aplica colores (textos, fondos, bordes)
@mixin apply-color($property, $color-name...) {
  #{$property}: get-color($color-name...);
}

// Aplica un color de fondo
@mixin apply-background-color($background-name...) {
  background-color: get-background-color($background-name...);
}

// Aplica colores con transparencia (textos, fondos, bordes)
@mixin apply-color-opacity($property, $alpha, $color-name...) {
  $color: get-color($color-name...);
  #{$property}: color-to-hsla($color, $alpha);
}

// Aplica colores específicos en modo claro y oscuro
@mixin apply-color-mode($light-color, $dark-color) {
  color: get-color($light-color);
  @media (prefers-color-scheme: dark) {
    color: get-color($dark-color);
  }
}

// Aplica colores específicos en modo claro y oscuro
@mixin apply-background-and-color-mode(
  $light-bg,
  $light-color,
  $dark-bg,
  $dark-color
) {
  background-color: get-color($light-bg...);
  color: get-color($light-color...);
  @media (prefers-color-scheme: dark) {
    background-color: get-color($dark-bg...);
    color: get-color($dark-color...);
  }
}

// === Mixins relacionados con diseño responsivo ===

// Aplica estilos en un breakpoint específico
@mixin apply-media-breakpoint($size) {
  @media (min-width: get-breakpoint($size)) {
    @content;
  }
}

// === Mixins relacionados con diseño visual ===

// Aplica bordes redondeados
@mixin apply-border($width: 1px, $style: solid, $color-name...) {
  $color: get-color($color-name...);
  border: $width $style $color;
}

// Aplica bordes redondeados
@mixin apply-border-radius($radius) {
  border-radius: $radius;
}

// Aplica una sombra
@mixin apply-box-shadow($shadows...) {
  $box-shadows: ();
  @each $shadow in $shadows {
    $box-shadows: list.append($box-shadows, $shadow, comma);
  }
  box-shadow: $box-shadows;
}

// Aplica un gradiente lineal
@mixin apply-gradient($start-color, $end-color, $direction: to right) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// === Mixins relacionados con Flexbox ===

// Configura un contenedor flex
@mixin apply-flex-container(
  $direction: row,
  $justify: center,
  $align: center,
  $gap: 0
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
}

// Configura un ítem de flex
@mixin apply-flex-item($grow: 0, $shrink: 1, $basis: auto) {
  flex: $grow $shrink $basis;
}

// === Mixins relacionados con animación ===

// Aplica transiciones suaves
@mixin apply-transition(
  $properties: all,
  $duration: 0.3s,
  $timing-function: ease-in-out
) {
  transition: $properties $duration $timing-function;
}

// === Mixins relacionados con inputs ===

@mixin input-state-hover {
  @include apply-color(border-color, primary, light);
}

@mixin input-state-focus($color) {
  border-color: $color;
  box-shadow: 0 0 0 3px color.scale($color, $alpha: -50%);
  outline: none;
}
